# # This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: self-hosted

#     strategy:
#       matrix:
#         node-version: [22.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v4
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v4
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: |
#           touch .env
#           echo "${{ secrets.PROD }}" > .env
#     - run: pm2 restart mash_server
name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci

    - name: Setup Environment Variables
      run: |
        touch .env
        echo "${{ secrets.PROD }}" > .env

    - name: Install PM2 Globally
      run: npm install -g pm2

    - name: Check and Manage mash_server
      run: |
        if pm2 list | grep -q "mash_server"; then
          echo "mash_server is running. Restarting..."
          pm2 restart mash_server --update-env
        else
          echo "mash_server is not running. Starting it..."
          pm2 start /home/ubuntu/actions-runner/_work/mash_server/mash_server/index.js --name "mash_server"
        fi
        pm2 save

    - name: Verify PM2 Status
      run: pm2 status
